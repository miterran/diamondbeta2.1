{"version":3,"sources":["../../src/routes/fetchLeagues.js"],"names":["router","Router","get","req","res","send"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;;AAGjC;AACAD,OAAOE,GAAP,CAAW,gBAAX,EAA6B,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC9CA,MAAIC,IAAJ,CAAS,IAAT;AACA,CAFD;;kBAIeL,M;;AAMf;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"fetchLeagues.js","sourcesContent":["import express from 'express';\nconst router = express.Router(); // eslint-disable-line new-cap\n\n\n// /api/fetch-leagues\nrouter.get('/fetch-leagues', function(req, res){\n\tres.send('hi')\n})\n\nexport default router;\n\n\n\n\n\n// import config from '../../config/config';\n// import sportConfig from '../utils/sportConfig';\n// import axios from 'axios';\n// axios.defaults.headers.common['JsonOdds-API-Key'] = config.apiKey;\n\n// const sortOddTypes = [\"Game\", \"First Half\", \"Second Half\", \"First Quarter\", \"Second Quarter\", \"Third Quarter\", \"Fourth Quarter\", \"First Period\", \"Second Period\", \"Third Period\", \"First Five Innings\", \"First Inning\"]\n\n// function leaguesList(req, res) {\n\n//         axios.get('https://jsonodds.com/api/odds').then(response => {\n//         const masterData = response.data;\n    \n//         masterData.map(function(event, eventIdx){\n//             switch(event.Sport){\n//                 case 0: // MLB Baseball\n//                 case 1: // NBA Basketball\n//                 case 2: // NCAAB Basketball\n//                 case 3: // NCAAF Football\n//                 case 4: // NFL Football\n//                 case 5: // NHL Hockey\n//                 case 8: // WNBA Basketball\n//                 case 10: // BOXING\n//                 case 11: // MMA\n//                 case 12: // CRICKET\n//                 case 14: // KHL Hockey\n//                 case 15: // AHL Hockey\n//                 case 16: // SHL Hockey\n//                 case 17: // HALL\n//                 case 18: // LMP\n//                 case 19: // NPB Baseball\n//                 case 20: // KBO Baseball\n//                 case 21: // Golf\n//                 case 22: // RUGBY Football\n//                 case 23: // WBC BaseBall\n//                     Array.isArray(sportConfig[event.Sport].leagues) ? null : sportConfig[event.Sport].leagues = [{leagueName: '', region: '', details: '', oddTypes: []}];\n//                     event.Odds.map(odd => {\n//                         const addOdd = sportConfig[event.Sport].leagues[0].oddTypes.every(oddType => oddType !== odd.OddType);\n//                         addOdd ? sportConfig[event.Sport].leagues[0].oddTypes.push(odd.OddType) : null;\n//                         return odd;\n//                     })\n//                     sportConfig[event.Sport].leagues[0].oddTypes.sort((a, b) => sortOddTypes.indexOf(a) - sortOddTypes.indexOf(b))\n//                     break;\n//                 case 7: // SOCCER\n//                     Array.isArray(sportConfig[7].leagues) ? null : sportConfig[7].leagues = [];\n//                     const soccerDetail = { leagueName: event.League.Name , region: event.DisplayRegion, details: '', oddTypes: [] };\n//                     const addSoccerDetail = sportConfig[7].leagues.every(detail => detail.name !== event.League.Name && detail.region !== event.DisplayRegion);\n//                     addSoccerDetail ? sportConfig[7].leagues.push(soccerDetail) : null;\n//                     event.Odds.map(odd => {\n//                         sportConfig[7].leagues.map(detail => {\n//                             if(detail.leagueName === event.League.Name && detail.region === event.DisplayRegion){\n//                                 const addOdd = detail.oddTypes.every(oddType => oddType !== odd.OddType);\n//                                 addOdd ? detail.oddTypes.push(odd.OddType) : null;\n//                                 detail.oddTypes.sort((a, b) => sortOddTypes.indexOf(a) - sortOddTypes.indexOf(b))\n//                             }\n//                             return detail;\n//                         })\n//                         return odd;\n//                     })\n\n//                     break;\n//                 default:\n//                     return;\n//             }  \n//             return event;\n//         })\n\n\n\n//         return res.json(sportConfig);\n//     }).catch(error => {\n//         console.log('fetch leagues list failed')\n//         return res.status(404).send('fetch leagues list failed')\n//     })\n// }\n\n\n// export default { leaguesList };"]}