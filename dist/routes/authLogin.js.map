{"version":3,"sources":["../../src/routes/authLogin.js"],"names":["router","Router","post","req","res","findOne","username","$regex","RegExp","body","userResult","isEmpty","password","toLowerCase","accountActive","token","sign","id","_id","accountType","jwtSecret","status","send","agentResult","get","newUser","passcode","maxWagerAmount","maxWinAmount","weeklyStartBalance","thisWeekExtraCredit","maxParlayTeam","createAt","moment","save","then","console","log","json","accountCreated","newAgent"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;AAEA;;;;AAEA;;;;;;;;AANA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAQAD,OAAOE,IAAP,CAAY,QAAZ;AAAA,sDAAsB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAmBI,eAAKC,OAAL,CAAa,EAACC,UAAU,EAACC,QAAQ,IAAIC,MAAJ,CAAW,MAAML,IAAIM,IAAJ,CAASH,QAA1B,EAAoC,GAApC,CAAT,EAAX,EAAb,CAnBJ;;AAAA;AAmBfI,gBAnBe;;AAAA,UAoBjB,iBAAEC,OAAF,CAAUD,UAAV,CApBiB;AAAA;AAAA;AAAA;;AAAA,YAqBjBA,WAAWE,QAAX,CAAoBC,WAApB,OAAsCV,IAAIM,IAAJ,CAASG,QAAT,CAAkBC,WAAlB,EAAtC,IAAyEH,WAAWI,aArBnE;AAAA;AAAA;AAAA;;AAsBbC,WAtBa,GAsBL,uBAAIC,IAAJ,CAAS;AACtBC,WAAIP,WAAWQ,GADO;AAEtBC,oBAAaT,WAAWS,WAFF;AAGtBb,iBAAUI,WAAWJ;AAHC,OAAT,EAIX,iBAAOc,SAJI,CAtBK;AAAA,uCA2BZhB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,KAArB,CA3BY;;AAAA;AAAA,uCA6BZX,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CA7BY;;AAAA;AAAA;AAAA,aAiCK,gBAAMjB,OAAN,CAAc,EAACC,UAAU,EAACC,QAAQ,IAAIC,MAAJ,CAAW,MAAML,IAAIM,IAAJ,CAASH,QAA1B,EAAoC,GAApC,CAAT,EAAX,EAAd,CAjCL;;AAAA;AAiCfiB,iBAjCe;;AAAA,UAkCjB,iBAAEZ,OAAF,CAAUY,WAAV,CAlCiB;AAAA;AAAA;AAAA;;AAAA,YAmCjBA,YAAYX,QAAZ,CAAqBC,WAArB,OAAuCV,IAAIM,IAAJ,CAASG,QAAT,CAAkBC,WAAlB,EAAvC,IAA0EU,YAAYT,aAnCrE;AAAA;AAAA;AAAA;;AAoCbC,YApCa,GAoCL,uBAAIC,IAAJ,CAAS;AACtBC,WAAIM,YAAYL,GADM;AAEtBC,oBAAaI,YAAYJ,WAFH;AAGtBb,iBAAUiB,YAAYjB;AAHA,OAAT,EAIX,iBAAOc,SAJI,CApCK;AAAA,uCAyCZhB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,MAArB,CAzCY;;AAAA;AAAA,uCA2CZX,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CA3CY;;AAAA;AAAA,uCA+CdlB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CA/Cc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB;;AAAA;AAAA;AAAA;AAAA;;AAuDAtB,OAAOwB,GAAP,CAAW,gBAAX,EAA6B,UAACrB,GAAD,EAAMC,GAAN,EAAc;AAC1C,KAAIqB,UAAU,mBAAS;AACvBnB,YAAU,OADa;AAEvBM,YAAU,MAFa;AAGvBc,YAAU,MAHa;AAIvBC,kBAAgB,GAJO;AAKvBC,gBAAc,IALS;AAMvBC,sBAAoB,IANG;AAOvBC,uBAAqB,CAPE;AAQvBC,iBAAe,CARQ;AASvBC,YAAUC;AATa,EAAT,CAAd;AAWAR,SAAQS,IAAR,GAAeC,IAAf,CAAoB,YAAU;AAC7BC,UAAQC,GAAR,CAAY,gBAAZ;AACAjC,MAAIkC,IAAJ,CAAS,EAAEC,gBAAgB,IAAlB,EAAT;AACA,EAHD;AAIA,CAhBD;;AAkBAvC,OAAOwB,GAAP,CAAW,iBAAX,EAA8B,UAACrB,GAAD,EAAMC,GAAN,EAAc;AAC3C,KAAIoC,WAAW,oBAAU;AACzBlC,YAAU,KADe;AAEzBM,YAAU,MAFe;AAGzBoB,YAAUC;AAHe,EAAV,CAAf;AAKAO,UAASN,IAAT,GAAgBC,IAAhB,CAAqB,YAAU;AAC9BC,UAAQC,GAAR,CAAY,iBAAZ;AACAjC,MAAIkC,IAAJ,CAAS,EAAEC,gBAAgB,IAAlB,EAAT;AACA,EAHD;AAIA,CAVD;;kBAYevC,M","file":"authLogin.js","sourcesContent":["import config from '../config';\nimport express from 'express';\nimport User from '../models/User';\nconst router = express.Router();\n\nimport Agent from '../models/Agent';\n\nimport jwt from 'jsonwebtoken';\n\nimport _ from 'lodash';\n\nrouter.post('/login', async (req, res) => {\n\t// User.findOne({username: {$regex: new RegExp('^' + req.body.username, 'i')}}, function(err, result){\n\t// \tif(result){\n\t// \t\tif(result.password.toLowerCase() === req.body.password.toLowerCase() && result.accountActive){\n\t// \t\t\tconst token = jwt.sign({\n\t// \t\t\t\tid: result._id,\t\t\t\t\n\t// \t\t\t\taccountType: result.accountType,\n\t// \t\t\t\tusername: result.username,\n\t// \t\t\t}, config.jwtSecret);\n\t// \t\t\treturn res.status(200).send(token)\n\t// \t\t}else{\n\t// \t\t\treturn res.status(404).send('password not correct')\n\t// \t\t}\n\t// \t}else{\n\t// \t\treturn res.status(404).send('user not found')\n\t// \t}\n\t// })\n\n\n\tconst userResult = await User.findOne({username: {$regex: new RegExp('^' + req.body.username, 'i')}})\n\tif(!_.isEmpty(userResult)){\n\t\tif(userResult.password.toLowerCase() === req.body.password.toLowerCase() && userResult.accountActive){\n\t\t\tconst token = jwt.sign({\n\t\t\t\tid: userResult._id,\t\t\t\t\n\t\t\t\taccountType: userResult.accountType,\n\t\t\t\tusername: userResult.username,\n\t\t\t}, config.jwtSecret);\n\t\t\treturn res.status(200).send(token)\n\t\t}else{\n\t\t\treturn res.status(404).send('password not correct')\n\t\t}\n\t}\n\n\tconst agentResult = await Agent.findOne({username: {$regex: new RegExp('^' + req.body.username, 'i')}})\n\tif(!_.isEmpty(agentResult)){\n\t\tif(agentResult.password.toLowerCase() === req.body.password.toLowerCase() && agentResult.accountActive){\n\t\t\tconst token = jwt.sign({\n\t\t\t\tid: agentResult._id,\t\t\t\t\n\t\t\t\taccountType: agentResult.accountType,\n\t\t\t\tusername: agentResult.username,\n\t\t\t}, config.jwtSecret);\n\t\t\treturn res.status(200).send(token)\n\t\t}else{\n\t\t\treturn res.status(404).send('password not correct')\n\t\t}\n\t}\n\n\treturn res.status(404).send('user not found')\n\n})\n\n\n\n\n\nrouter.get('/register-user', (req, res) => {\n\tlet newUser = new User({\n\tusername: 'user6',\n\tpassword: '1234',\n\tpasscode: '4321',\n\tmaxWagerAmount: 500,\n\tmaxWinAmount: 5000,\n\tweeklyStartBalance: 5000,\n\tthisWeekExtraCredit: 0,\n\tmaxParlayTeam: 6,\n\tcreateAt: moment()\n\t});\n\tnewUser.save().then(function(){\n\t\tconsole.log('user acc saved')\n\t\tres.json({ accountCreated: true })\n\t})\n})\n\nrouter.get('/register-agent', (req, res) => {\n\tlet newAgent = new Agent({\n\tusername: '007',\n\tpassword: '1234',\n\tcreateAt: moment()\n\t});\n\tnewAgent.save().then(function(){\n\t\tconsole.log('agent acc saved')\n\t\tres.json({ accountCreated: true })\n\t})\n})\n\nexport default router\n\n\n\n\n"]}