{"version":3,"sources":["../../src/routes/authLogin.js"],"names":["router","Router","post","req","res","console","log","body","username","findOne","toLowerCase","err","result","password","accountActive","token","sign","id","_id","accountType","jwtSecret","status","send"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAFA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAIAD,OAAOE,IAAP,CAAY,QAAZ,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCC,SAAQC,GAAR,CAAYH,IAAII,IAAJ,CAASC,QAArB;AACA,gBAAKC,OAAL,CAAa,EAACD,UAAUL,IAAII,IAAJ,CAASC,QAAT,CAAkBE,WAAlB,EAAX,EAAb,EAA0D,UAASC,GAAT,EAAcC,MAAd,EAAqB;AAC9EP,UAAQC,GAAR,CAAYM,MAAZ;AACA,MAAGA,MAAH,EAAU;AACT,OAAGA,OAAOC,QAAP,CAAgBH,WAAhB,OAAkCP,IAAII,IAAJ,CAASM,QAAT,CAAkBH,WAAlB,EAAlC,IAAqEE,OAAOE,aAA/E,EAA6F;AAC5F,QAAMC,QAAQ,uBAAIC,IAAJ,CAAS;AACtBC,SAAIL,OAAOM,GADW;AAEtBC,kBAAaP,OAAOO,WAFE;AAGtBX,eAAUI,OAAOJ;AAHK,KAAT,EAIX,iBAAOY,SAJI,CAAd;AAKA,WAAOhB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,KAArB,CAAP;AACA,IAPD,MAOK;AACJ,WAAOX,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CAAP;AACA;AACD,GAXD,MAWK;AACJ,UAAOlB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CAAP;AACA;AACD,EAhBD;AAiBA,CAnBD;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;kBAEetB,M","file":"authLogin.js","sourcesContent":["import config from '../config';\nimport express from 'express';\nimport User from '../models/User';\nconst router = express.Router();\n\nimport jwt from 'jsonwebtoken';\n\nrouter.post('/login', (req, res) => {\n\tconsole.log(req.body.username)\n\tUser.findOne({username: req.body.username.toLowerCase()}, function(err, result){\n\t\tconsole.log(result)\n\t\tif(result){\n\t\t\tif(result.password.toLowerCase() === req.body.password.toLowerCase() && result.accountActive){\n\t\t\t\tconst token = jwt.sign({\n\t\t\t\t\tid: result._id,\t\t\t\t\n\t\t\t\t\taccountType: result.accountType,\n\t\t\t\t\tusername: result.username,\n\t\t\t\t}, config.jwtSecret);\n\t\t\t\treturn res.status(200).send(token)\n\t\t\t}else{\n\t\t\t\treturn res.status(404).send('password not correct')\n\t\t\t}\n\t\t}else{\n\t\t\treturn res.status(404).send('user not found')\n\t\t}\n\t})\n})\n\n\n\n\n\n// router.get('/register', (req, res) => {\n// \tlet newUser = new User({\n// \taccountType: 'user',\n// \tusername: 'user6',\n// \tpassword: '1234',\n// \tpasscode: '4321',\n// \tmaxWagerAmount: 500,\n// \tmaxWinAmount: 5000,\n// \tweeklyStartBalance: 5000,\n// \tthisWeekExtraCredit: 0,\n// \tmaxParlayTeam: 6\n// \t});\n// \tnewUser.save().then(function(){\n// \t\tconsole.log('saved')\n// \t\tres.json({ accountCreated: true })\n// \t})\n// })\n\nexport default router\n\n\n\n\n\n"]}