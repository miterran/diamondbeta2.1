{"version":3,"sources":["../../src/schedule/openBetResult.js"],"names":["OpenBet","find","openBets","isEmpty","Promise","all","map","openBet","eventsHaveWon","events","event","Status","eventsHaveLost","eventsHavePush","eventsHaveCanceled","eventsHavePostponed","eventsHaveReview","allEventsWon","every","allEventsLost","allEventsPush","allEventsCanceled","allEventsPostponed","allEventsReview","allEventsFinished","Result","Final","resultBet","orderNumber","betOption","superAgent","agent","user","eventsWagerDetail","orderStatus","createdAt","completedAt","orderResultAmount","WinAmount","Number","RiskAmount","toFixed","parlayPoint","BetDetail","OddLine","push","Math","abs","riskPoint","reduce","a","b","newHistoryBet","HistoryBet","save","findOneAndRemove","_id","agentIncAmount","findOneAndUpdate","username","$inc","creditBalance","new","err","newTransaction","amount","resultAmount","status","then","console","log","newReviewBet","ReviewBet","catch","error","openBetResult"],"mappings":"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","file":"openBetResult.js","sourcesContent":["import moment from 'moment';\nimport config from '../config';\nimport Agent from '../models/Agent';\nimport AgentTransaction from '../models/AgentTransaction'\nimport BetOrder from '../models/BetOrder'\nconst OpenBet = BetOrder.OpenBet\nconst ReviewBet = BetOrder.ReviewBet\nconst HistoryBet = BetOrder.HistoryBet\nimport _ from 'lodash';\n\nasync function openBetResult (){\n\tconst openBets = await OpenBet.find({});\n\tif(!_.isEmpty(openBets)){\n\t\tawait Promise.all(openBets.map(async function(openBet){\n\n\t\t\tconst eventsHaveWon = _.find(openBet.events, (event) => event.Status === 'Won')\n\t\t\tconst eventsHaveLost = _.find(openBet.events, (event) => event.Status === 'Lost')\n\t\t\tconst eventsHavePush = _.find(openBet.events, (event) => event.Status === 'Push')\n\t\t\tconst eventsHaveCanceled = _.find(openBet.events, (event) => event.Status === 'Canceled')\n\t\t\tconst eventsHavePostponed = _.find(openBet.events, (event) => event.Status === 'Postponed')\n\t\t\tconst eventsHaveReview = _.find(openBet.events, (event) => event.Status === 'Review')\n\n\t\t\tconst allEventsWon = openBet.events.every((event) => event.Status === 'Won' )\n\t\t\tconst allEventsLost = openBet.events.every((event) => event.Status === 'Lost' )\n\t\t\tconst allEventsPush = openBet.events.every((event) => event.Status === 'Push' )\n\t\t\tconst allEventsCanceled = openBet.events.every((event) => event.Status === 'Canceled' )\n\t\t\tconst allEventsPostponed = openBet.events.every((event) => event.Status === 'Postponed' )\n\t\t\tconst allEventsReview = openBet.events.every((event) => event.Status === 'Review' )\n\n\t\t\tconst allEventsFinished = openBet.events.every((event) => event.Result.Final === true )\n\t\t\tif(allEventsFinished){\n\n\t\t\t\tlet resultBet = {\n\t\t    \t\torderNumber: openBet.orderNumber,\n\t\t    \t\tbetOption: openBet.betOption,\n\t\t    \t\tsuperAgent: openBet.superAgent,\n\t\t    \t\tagent: openBet.agent,\n\t\t    \t\tuser: openBet.user,\n\t\t    \t\tevents: openBet.events,\n\t\t    \t\teventsWagerDetail: openBet.eventsWagerDetail,\n\t\t    \t\torderStatus: 'Pending',\n\t\t    \t\tcreatedAt: openBet.createdAt,\n\t\t    \t\tcompletedAt: moment(),\n\t\t    \t\torderResultAmount: 0\n\t\t\t\t}\n\n\t\t\t\tif(openBet.betOption === 'Straight' && allEventsFinished){\n\t\t\t\t\tswitch(openBet.events[0].Status){\n\t\t\t\t\t\tcase 'Won':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Won';\n\t\t\t\t\t\t\tresultBet.orderResultAmount = openBet.eventsWagerDetail.WinAmount;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Lost':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Lost';\n\t\t\t\t\t\t\tresultBet.orderResultAmount = -Number(openBet.eventsWagerDetail.RiskAmount);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'WonHalf':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'WonHalf';\n\t\t\t\t\t\t\tresultBet.orderResultAmount = (Number(openBet.eventsWagerDetail.WinAmount) / 2).toFixed();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LostHalf':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'LostHalf';\n\t\t\t\t\t\t\tresultBet.orderResultAmount = -(Number(openBet.eventsWagerDetail.RiskAmount) / 2).toFixed();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Push':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Push';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Postponed':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Postponed';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Canceled':\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Canceled';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Review';\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(openBet.betOption === 'Parlay'){\n\t\t\t\t\tswitch(true){\n\t\t\t\t\t\tcase !_.isEmpty(eventsHaveLost):\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Lost'\n\t\t\t\t\t\t\tresultBet.orderResultAmount = -Number(openBet.eventsWagerDetail.RiskAmount);\n\t\t\t\t\t\t\tresultBet.events.map((event) => {\n\t\t\t\t\t\t\t\tif(event.Status === 'Pending'){\n\t\t\t\t\t\t\t\t\tevent.Status = 'Close'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase !_.isEmpty(eventsHavePostponed):\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Postponed'\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase allEventsPush && allEventsFinished:\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Push'\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase allEventsCanceled && allEventsFinished:\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Canceled'\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase !_.isEmpty(eventsHaveWon) &&  _.isEmpty(eventsHaveReview) && _.isEmpty(eventsHaveLost) && _.isEmpty(eventsHavePostponed) && allEventsFinished || allEventsWon && allEventsFinished:\n\t\t\t\t\t\t\tlet parlayPoint = []\n\t\t\t\t\t\t\topenBet.events.map(event => {\n\t\t\t\t\t\t\t\tif(event.Status === 'Won'){\n\t\t\t\t\t\t\t\t\tif(event.BetDetail.OddLine > 0){ \n\t\t\t\t\t\t\t\t\t\tparlayPoint.push((Number(event.BetDetail.OddLine) + 100) / 100)\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tparlayPoint.push((Math.abs(event.BetDetail.OddLine) + 100) / Math.abs(event.BetDetail.OddLine))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tlet riskPoint = parlayPoint.reduce((a, b) =>  a * b )\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Won';\n\t\t\t\t\t\t\tresultBet.orderResultAmount = ((Number(openBet.eventsWagerDetail.RiskAmount) * Number(riskPoint) - Number(openBet.eventsWagerDetail.RiskAmount)) * 1).toFixed()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase allEventsFinished:\n\t\t\t\t\t\t\tresultBet.orderStatus = 'Review'\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(resultBet.orderStatus !== 'Pending'){\n\t\t\t\t\tif(resultBet.orderStatus !== 'Review' || resultBet.orderStatus !== 'Postponed'){\n\n\t\t\t\t\t\tlet newHistoryBet = new HistoryBet(resultBet)\n\t\t\t\t\t\tawait newHistoryBet.save()\n\t\t\t\t\t\tawait OpenBet.findOneAndRemove({ _id: openBet._id})\n\n\t\t\t\t\t\tlet agentIncAmount = 0\n\t\t\t\t\t\tif(resultBet.orderStatus === 'Lost' || resultBet.orderStatus === 'LostHalf'){\n\t\t\t\t\t\t\tagentIncAmount = resultBet.orderResultAmount\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tawait Agent.findOneAndUpdate({ username: openBet.agent }, {$inc: { creditBalance: resultBet.orderResultAmount }}, {new: true}, function(err, agent){\n\t\t\t\t\t\t\tlet newTransaction = new AgentTransaction({\n\t\t\t\t\t\t\t\tsuperAgent: 'diamond',\n\t\t\t\t\t\t\t\tagent: resultBet.agent,\n\t\t\t\t\t\t\t\tuser: openBet.user,\n\t\t\t\t\t\t\t\tcompletedAt: resultBet.completedAt,\n\t\t\t\t\t\t\t\torderNumber: resultBet.orderNumber,\n\t\t\t\t\t\t\t\tamount: resultBet.orderResultAmount,\n\t\t\t\t\t\t\t\tresultAmount: agent.creditBalance,\n\t\t\t\t\t\t\t\tstatus: resultBet.orderStatus\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tnewTransaction.save().then(function(){\n\t\t\t\t\t\t\t\tconsole.log('deposit save & transaction saved')\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlet newReviewBet = new ReviewBet(resultBet)\n\t\t\t\t\t\tawait newReviewBet.save()\n\t\t\t\t\t\tawait OpenBet.findOneAndRemove({ _id: openBet._id})\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log(resultBet.orderNumber + 'wait next round')\n\t\t\t\t}\n\t\t\t}\n\n\t\t})).then(() => {\n\t\t\tconsole.log('open bet result done')\n\t\t}).catch((error) => {\n\t\t\tconsole.log('open bet result error')\n\t\t\tthrow error\n\t\t})\n\t}else{\n\t\tconsole.log('openBet is empty')\n\t}\n}\n\nexport default openBetResult"]}