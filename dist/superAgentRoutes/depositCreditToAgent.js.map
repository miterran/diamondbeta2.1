{"version":3,"sources":["../../src/superAgentRoutes/depositCreditToAgent.js"],"names":["router","Router","HistoryBet","OpenBet","get","req","res","newDeposit","completedAt","orderResultAmount","orderNumber","process","toUpperCase","agent","superAgent","save","findOneAndUpdate","username","$inc","creditBalance","new","err","newTransaction","user","amount","resultAmount","status","then","send","creditPending","find","$or","orderStatus","historyBets","isEmpty","map","historyBet","deposits","deposit","openBets","openBet","eventsWagerDetail","RiskAmount","$set","json","transactions","agentCreditAmount","concat","sort","a","b","Date","Promise","all","transaction","result"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AAGA;;;;AAIA;;;;;;;;AATA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAMA,IAAMC,aAAa,mBAASA,UAA5B;AACA,IAAMC,UAAU,mBAASA,OAAzB;;AAIAH,OAAOI,GAAP,CAAW,0BAAX;AAAA,sDAAuC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAClCC,gBADkC,GACrB,sBAAY;AAC5BC,oBAAa,uBADe;AAE5BC,0BAAmB,IAFS;AAG5BC,oBAAa,iBAAOC,OAAP,GAAiBC,WAAjB,EAHe;AAI5BC,cAAO,SAJqB;AAK5BC,mBAAY;AALgB,OAAZ,CADqB;AAAA;AAAA,aAShCP,WAAWQ,IAAX,EATgC;;AAAA;AAAA;AAAA,aAUhC,gBAAMC,gBAAN,CAAuB,EAAEC,UAAU,SAAZ,EAAvB,EAAgD,EAACC,MAAM,EAAEC,eAAe,IAAjB,EAAP,EAAhD,EAAiF,EAAEC,KAAK,IAAP,EAAjF,EAAgG,UAASC,GAAT,EAAcR,KAAd,EAAoB;AACzH,WAAIS,iBAAiB,+BAAqB;AACzCR,oBAAY,SAD6B;AAEzCD,eAAON,WAAWM,KAFuB;AAGzCU,cAAMhB,WAAWM,KAHwB;AAIzCL,qBAAaD,WAAWC,WAJiB;AAKzCE,qBAAaH,WAAWG,WALiB;AAMzCc,gBAAQjB,WAAWE,iBANsB;AAOzCgB,sBAAcZ,MAAMM,aAPqB;AAQzCO,gBAAQ;AARiC,QAArB,CAArB;AAUAJ,sBAAeP,IAAf,GAAsBY,IAAtB,CAA2B,YAAU;AACpCrB,YAAIsB,IAAJ,CAAS,cAAT;AACA,QAFD;AAGA,OAdK,CAVgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvC;;AAAA;AAAA;AAAA;AAAA;;AA4BA5B,OAAOI,GAAP,CAAW,qBAAX;AAAA,uDAAkC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAE7Ba,mBAF6B,GAEb,CAFa;AAG7BU,mBAH6B,GAGb,CAHa;AAAA;AAAA,aAIP3B,WAAW4B,IAAX,CAAgB,EAACC,KAAK,CAAC,EAAElB,OAAO,SAAT,EAAoBmB,aAAa,MAAjC,EAAD,EAA2C,EAAEnB,OAAO,SAAT,EAAoBmB,aAAa,UAAjC,EAA3C,CAAN,EAAhB,CAJO;;AAAA;AAI3BC,iBAJ2B;;AAKjC,UAAG,CAAC,iBAAEC,OAAF,CAAUD,WAAV,CAAJ,EAA4BA,YAAYE,GAAZ,CAAgB,UAACC,UAAD;AAAA,cAAgBjB,iBAAiBiB,WAAW3B,iBAA5C;AAAA,OAAhB;;AALK;AAAA,aAOV,kBAAQqB,IAAR,CAAa,EAACjB,OAAO,SAAR,EAAb,CAPU;;AAAA;AAO3BwB,cAP2B;;AAQjC,UAAG,CAAC,iBAAEH,OAAF,CAAUG,QAAV,CAAJ,EAAyBA,SAASF,GAAT,CAAa,UAACG,OAAD;AAAA,cAAanB,iBAAiBmB,QAAQ7B,iBAAtC;AAAA,OAAb;;AARQ;AAAA,aAUVN,QAAQ2B,IAAR,CAAa,EAAEjB,OAAO,SAAT,EAAb,CAVU;;AAAA;AAU3B0B,cAV2B;;AAWjC,UAAG,CAAC,iBAAEL,OAAF,CAAUK,QAAV,CAAJ,EAAyBA,SAASJ,GAAT,CAAa,UAACK,OAAD;AAAA,cAAaX,iBAAiBW,QAAQC,iBAAR,CAA0BC,UAAxD;AAAA,OAAb;;AAXQ;AAAA,aAab,gBAAM1B,gBAAN,CAAuB,EAAEC,UAAU,SAAZ,EAAvB,EAAgD,EAAC0B,MAAM,EAAExB,eAAeA,aAAjB,EAAgCU,eAAeA,aAA/C,EAAP,EAAhD,EAAwH,EAAET,KAAK,IAAP,EAAxH,CAba;;AAAA;AAa3BP,WAb2B;;AAcjCP,UAAIsC,IAAJ,CAAS/B,KAAT;;AAdiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlC;;AAAA;AAAA;AAAA;AAAA;;AAqBAb,OAAOI,GAAP,CAAW,2BAAX;AAAA,uDAAwC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnCuC,kBAFmC,GAEpB,EAFoB;AAGnCC,uBAHmC,GAGf,CAHe;AAAA;AAAA,aAKb5C,WAAW4B,IAAX,CAAgB,EAAEjB,OAAO,SAAT,EAAhB,CALa;;AAAA;AAKjCoB,iBALiC;AAAA;AAAA,aAMhB,kBAAQH,IAAR,CAAa,EAACjB,OAAO,SAAR,EAAb,CANgB;;AAAA;AAMjCwB,cANiC;;;AAQvCQ,qBAAeZ,YAAYc,MAAZ,CAAmBV,QAAnB,CAAf;;AAEAQ,mBAAaG,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAAE,cAAO,IAAIC,IAAJ,CAASF,EAAEzC,WAAX,IAA0B,IAAI2C,IAAJ,CAASD,EAAE1C,WAAX,CAAjC;AAA0D,OAAxF;;AAVuC;AAAA,aAYjC4C,QAAQC,GAAR,CAAYR,aAAaV,GAAb;AAAA,6DAAiB,kBAAemB,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,gBAAGA,YAAYtB,WAAZ,KAA4B,MAA5B,IAAsCsB,YAAYtB,WAAZ,KAA4B,UAAlE,IAAgFsB,YAAYtB,WAAZ,KAA4B,WAA/G,EAA2H;AAC1Hc,kCAAqBQ,YAAY7C,iBAAjC;AACA,aAFD,MAEK;AACJqC,kCAAqB,CAArB;AACA;AALiC;AAAA,mBAMb,2BAAiB9B,gBAAjB,CAAkC,EAAEN,aAAa4C,YAAY5C,WAA3B,EAAlC,EAA4E,EAAEiC,MAAM,EAAEnB,QAAQ8B,YAAY7C,iBAAtB,EAAyCgB,cAAcqB,iBAAvD,EAAR,EAA5E,EAAiK,EAAC1B,KAAK,IAAN,EAAjK,CANa;;AAAA;AAM5BmC,kBAN4B;;AAAA,gBAO9BA,MAP8B;AAAA;AAAA;AAAA;;AAQ7BjC,0BAR6B,GAQZ,+BAAqB;AACzCR,yBAAY,SAD6B;AAEzCD,oBAAOyC,YAAYzC,KAFsB;AAGzCU,mBAAM+B,YAAY/B,IAAZ,IAAoB+B,YAAYzC,KAHG;AAIzCL,0BAAa8C,YAAY9C,WAJgB;AAKzCE,0BAAa4C,YAAY5C,WALgB;AAMzCc,qBAAQ8B,YAAY7C,iBANqB;AAOzCgB,2BAAcqB,iBAP2B;AAQzCpB,qBAAQ4B,YAAYtB;AARqB,aAArB,CARY;AAAA;AAAA,mBAkB3BV,eAAeP,IAAf,EAlB2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;;AAAA;AAAA;AAAA;AAAA,UAAZ,EAoBFY,IApBE,CAoBG,YAAU;AAClBrB,WAAIsC,IAAJ,CAAS,MAAT;AACA,OAtBK,CAZiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxC;;AAAA;AAAA;AAAA;AAAA;;kBAuCe5C,M","file":"depositCreditToAgent.js","sourcesContent":["import _ from 'lodash';\nimport uniqid from 'uniqid';\nimport moment from 'moment';\nimport Agent from '../models/Agent';\nimport express from 'express';\nconst router = express.Router();\n\nimport AgentTransaction from '../models/AgentTransaction'\n\n\nimport BetOrder from '../models/BetOrder'\nconst HistoryBet = BetOrder.HistoryBet\nconst OpenBet = BetOrder.OpenBet\n\nimport Deposit from '../models/Deposit'\n\nrouter.get('/deposit-credit-to-agent', async (req, res) => {\n\tlet newDeposit = new Deposit({\n\t\tcompletedAt: moment(),\n\t\torderResultAmount: 2000,\n\t\torderNumber: uniqid.process().toUpperCase(),\n\t\tagent: 'plio517',\n\t\tsuperAgent: 'diamond'\n\t})\n\n\tawait newDeposit.save()\n\tawait Agent.findOneAndUpdate({ username: 'plio517' }, {$inc: { creditBalance: 2000 }}, { new: true }, function(err, agent){\n\t\tlet newTransaction = new AgentTransaction({\n\t\t\tsuperAgent: 'diamond',\n\t\t\tagent: newDeposit.agent,\n\t\t\tuser: newDeposit.agent,\n\t\t\tcompletedAt: newDeposit.completedAt,\n\t\t\torderNumber: newDeposit.orderNumber,\n\t\t\tamount: newDeposit.orderResultAmount,\n\t\t\tresultAmount: agent.creditBalance,\n\t\t\tstatus: 'Deposited'\n\t\t})\n\t\tnewTransaction.save().then(function(){\n\t\t\tres.send('deposit save')\n\t\t})\n\t})\n\n})\n\nrouter.get('/recal-agent-credit', async (req, res) => {\n\n\tlet creditBalance = 0\n\tlet creditPending = 0\n\tconst historyBets = await HistoryBet.find({$or: [{ agent: 'plio517', orderStatus: 'Lost'}, { agent: 'plio517', orderStatus: 'LostHalf'}]})\n\tif(!_.isEmpty(historyBets)) historyBets.map((historyBet) => creditBalance += historyBet.orderResultAmount)\n\n\tconst deposits = await Deposit.find({agent: 'plio517'})\n\tif(!_.isEmpty(deposits)) deposits.map((deposit) => creditBalance += deposit.orderResultAmount)\n\n\tconst openBets = await OpenBet.find({ agent: 'plio517' })\n\tif(!_.isEmpty(openBets)) openBets.map((openBet) => creditPending += openBet.eventsWagerDetail.RiskAmount)\n\t\n\tconst agent = await Agent.findOneAndUpdate({ username: 'plio517' }, {$set: { creditBalance: creditBalance, creditPending: creditPending }}, { new: true })\n\tres.json(agent)\n\n}) \n\n\n\n\nrouter.get('/recal-agent-transactions', async (req, res) => {\n\n\tlet transactions = []\n\tlet agentCreditAmount = 0\n\n\tconst historyBets = await HistoryBet.find({ agent: 'plio517' })\n\tconst deposits = await Deposit.find({agent: 'plio517'})\n\n\ttransactions = historyBets.concat(deposits)\n\n\ttransactions.sort((a, b) => { return new Date(a.completedAt) - new Date(b.completedAt) })\n\n\tawait Promise.all(transactions.map(async function(transaction){\n\t\tif(transaction.orderStatus === 'Lost' || transaction.orderStatus === 'LostHalf' || transaction.orderStatus === 'Deposited'){\n\t\t\tagentCreditAmount += transaction.orderResultAmount\n\t\t}else{\n\t\t\tagentCreditAmount += 0\n\t\t}\n\t\tconst result = await AgentTransaction.findOneAndUpdate({ orderNumber: transaction.orderNumber }, { $set: { amount: transaction.orderResultAmount, resultAmount: agentCreditAmount }}, {new: true})\n\t\tif(!result){\n\t\t\tlet newTransaction = new AgentTransaction({\n\t\t\t\tsuperAgent: 'diamond',\n\t\t\t\tagent: transaction.agent,\n\t\t\t\tuser: transaction.user || transaction.agent,\n\t\t\t\tcompletedAt: transaction.completedAt,\n\t\t\t\torderNumber: transaction.orderNumber,\n\t\t\t\tamount: transaction.orderResultAmount,\n\t\t\t\tresultAmount: agentCreditAmount,\n\t\t\t\tstatus: transaction.orderStatus\n\t\t\t})\n\t\t\tawait newTransaction.save()\n\t\t}\n\t})).then(function(){\n\t\tres.json('done')\n\t})\n\n\t\n}) \n\nexport default router;"]}