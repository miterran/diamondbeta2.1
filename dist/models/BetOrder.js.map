{"version":3,"sources":["../../src/models/BetOrder.js"],"names":["Promise","global","Schema","BetOrderSchema","orderNumber","type","String","required","betOption","superAgent","agent","user","events","Array","eventsWagerDetail","Object","orderStatus","default","orderResultAmount","Number","createdAt","Date","now","completedAt","OpenBet","model","HistoryBet","ReviewBet"],"mappings":";;;;;;AAAA;;;;;;AACA,mBAASA,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,iBAAiB,IAAI,mBAASD,MAAb,CAAoB;AACvCE,iBAAa;AACTC,cAAMC,MADG;AAETC,kBAAU;AAFD,KAD0B;AAKvCC,eAAW;AACPH,cAAMC,MADC;AAEPC,kBAAU;AAFH,KAL4B;AASvCE,gBAAY;AACRJ,cAAMC,MADE;AAERC,kBAAU;AAFF,KAT2B;AAavCG,WAAO;AACHL,cAAMC,MADH;AAEHC,kBAAU;AAFP,KAbgC;AAiBvCI,UAAM;AACFN,cAAMC,MADJ;AAEFC,kBAAU;AAFR,KAjBiC;AAqBvCK,YAAQ;AACJP,cAAMQ,KADF;AAEJN,kBAAU;AAFN,KArB+B;AAyBvCO,uBAAmB;AACfT,cAAMU,MADS;AAEfR,kBAAU;AAFK,KAzBoB;AA6BvCS,iBAAa;AACTX,cAAMU,MADG;AAETE,iBAAS;AAFA,KA7B0B;AAiCvCC,uBAAmB;AACfb,cAAMc,MADS;AAEfF,iBAAS;AAFM,KAjCoB;AAqCvCG,eAAW;AACPf,cAAMgB,IADC;AAEPJ,iBAASI,KAAKC;AAFP,KArC4B;AAyCvCC,iBAAY;AACRlB,cAAMgB;AADE;AAzC2B,CAApB,CAAvB;;AA+CA;;kBAEe;AACXG,aAAS,mBAASC,KAAT,CAAe,SAAf,EAA0BtB,cAA1B,CADE;AAEXuB,gBAAY,mBAASD,KAAT,CAAe,YAAf,EAA6BtB,cAA7B,CAFD;AAGXwB,eAAW,mBAASF,KAAT,CAAe,WAAf,EAA4BtB,cAA5B;AAHA,C","file":"BetOrder.js","sourcesContent":["import mongoose from 'mongoose';\nmongoose.Promise = global.Promise;\n\nconst Schema = mongoose.Schema;\n\nconst BetOrderSchema = new mongoose.Schema({\n    orderNumber: {\n        type: String,\n        required: true\n    },\n    betOption: {\n        type: String,\n        required: true\n    },\n    superAgent: {\n        type: String,\n        required: true\n    },\n    agent: {\n        type: String,\n        required: true\n    },\n    user: {\n        type: String,\n        required: true\n    },\n    events: {\n        type: Array,\n        required: true\n    },\n    eventsWagerDetail: {\n        type: Object,\n        required: true\n    },\n    orderStatus: {\n        type: Object,\n        default: 'Pending'\n    },\n    orderResultAmount: {\n        type: Number,\n        default: 0\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    completedAt:{\n        type: Date\n    }\n});\n\n\n// const OpenBet = mongoose.model('openbet', OpenBetSchema);\n\nexport default { \n    OpenBet: mongoose.model('openbet', BetOrderSchema),\n    HistoryBet: mongoose.model('historybet', BetOrderSchema),\n    ReviewBet: mongoose.model('reviewbet', BetOrderSchema)\n};"]}