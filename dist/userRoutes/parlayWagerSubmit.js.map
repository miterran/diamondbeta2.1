{"version":3,"sources":["../../src/userRoutes/parlayWagerSubmit.js"],"names":["defaults","headers","common","apiKey","post","router","Router","OpenBet","req","res","latestParlayOddsWagerList","reqBodyParlayEvents","orderExist","body","parlayList","map","push","event","OddPickID","find","user","username","existParlayOrders","existParlayOrderEvents","parlayOrder","events","difference","length","WagerDetail","Status","ErrMsg","orderNumber","RiskAmount","WinAmount","WagerAmount","BetConfirm","status","json","Promise","all","queryOdd","stringify","GameIDs","ID","Source","OddDetail","SiteID","Sport","sport","OddType","BetDetail","replace","response","isEmpty","data","isAfter","MatchTimePST","PrevBetDetail","Odds","LastUpdatedPST","lastUpdated","subtract","LastUpdated","Object","assign","BetType","OddTarget","OddLine","MoneyLineHome","MoneyLineAway","OddPoint","PointSpreadHome","PointSpreadHomeLine","PointSpreadAway","PointSpreadAwayLine","TotalNumber","OverLine","UnderLine","DrawLine","quarter","toFixed","Number","JSON","then","allBetConfirmed","every","newParlayOpenBet","process","toUpperCase","superAgent","betOption","agent","eventsWagerDetail","riskAmount","winAmount","Result","createdAt","save","console","log","send","catch"],"mappings":"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","file":"parlayWagerSubmit.js","sourcesContent":["import config from '../config';\nimport sportConfig from '../utils/sportConfig';\nimport express from 'express';\nimport axios from 'axios';\nimport querystring from 'querystring';\naxios.defaults.headers.common['JsonOdds-API-Key'] = config.apiKey;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nconst router = express.Router();\nimport _ from 'lodash';\nimport BetOrder from '../models/BetOrder'\nconst OpenBet = BetOrder.OpenBet\nimport moment from 'moment';\nimport uniqid from 'uniqid';\n\nrouter.post('/parlay-wager-submit', async (req, res) => {\n\tconst latestParlayOddsWagerList = [];\n\tconst reqBodyParlayEvents = []\n\tlet orderExist = false\n\n\treq.body.parlayList.map(event => reqBodyParlayEvents.push(event.OddPickID))\n\n\tconst existParlayOrders = await OpenBet.find({'user': req.user.username, 'betOption': 'Parlay'})\n\texistParlayOrders.map(parlayOrder => {\n\t\tconst existParlayOrderEvents = []\n\t\tparlayOrder.events.map(event => existParlayOrderEvents.push(event.OddPickID))\n\n\t\tif(orderExist) return;\n\t\tif(_.difference(reqBodyParlayEvents, existParlayOrderEvents).length === 0){\n\t\t\treq.body.parlayList.map(event => {\n\t\t\t\tevent.WagerDetail.Status = 'Existed'\n\t\t\t\tevent.WagerDetail.ErrMsg = 'Order Existed ' + parlayOrder.orderNumber;\n\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t})\n\t\t\torderExist = true;\n\t\t}\n\t})\n\n\torderExist ? res.status(202).json(latestParlayOddsWagerList) :\n\tawait Promise.all(req.body.parlayList.map(async (event) => {\n\t\tconst queryOdd = querystring.stringify({GameIDs: event.ID, Source: event.OddDetail.SiteID, Sport: sportConfig[event.Sport].sport, OddType: event.BetDetail.OddType.replace(/\\s/g,'')});\n\t\tconst response = await axios.post('https://jsonodds.com/api/odds/bygames', queryOdd)\n\n\t\tswitch(true){\n\t\t\tcase _.isEmpty(response.data):\n\t\t\t\tevent.WagerDetail.Status = 'NotFound'\n\t\t\t\tevent.WagerDetail.ErrMsg = 'Event Not Found';\n\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t\tbreak;\n\t\t\tcase moment().isAfter(moment(event.MatchTimePST)):\n\t\t\t\tevent.WagerDetail.Status = 'TimeOut'\n\t\t\t\tevent.WagerDetail.ErrMsg = 'Event Time Out';\n\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tevent.OddDetail = response.data[0].Odds[0];\n\t\t\t\tevent.OddDetail.LastUpdatedPST = moment(response.data[0].Odds[0].lastUpdated).subtract('7', 'hours')\n\t\t\t\tdelete event.OddDetail.LastUpdated\n\t\t\t\tevent.PrevBetDetail = Object.assign({}, event.BetDetail);\n\t\t\t\tswitch(true){\n\t\t\t\t\tcase event.BetDetail.BetType === 'M-Line' && event.BetDetail.OddTarget === 'Home':\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.MoneyLineHome;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'M-Line' && event.BetDetail.OddTarget === 'Away':\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.MoneyLineAway;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Spread' && event.BetDetail.OddTarget === 'Home':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.PointSpreadHome;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.PointSpreadHomeLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Spread' && event.BetDetail.OddTarget === 'Away':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.PointSpreadAway;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.PointSpreadAwayLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Total' && event.BetDetail.OddTarget === 'Over':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.TotalNumber;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.OverLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Total' && event.BetDetail.OddTarget === 'Under':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.TotalNumber;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.UnderLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Draw' && event.Sport === 7:\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.DrawLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst quarter = (event.BetDetail.OddPoint % 1).toFixed(2)\n\t\t\t\tswitch(true){\n\t\t\t\t\tcase Number(event.BetDetail.OddLine) === 0:\n\t\t\t\t\t\tevent.WagerDetail.Status = 'NotAvailable'\n\t\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Wager Currently Not Available';\n\t\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Number(quarter) === 0.25 || Number(quarter) === 0.75:\n\t\t\t\t\t\tevent.WagerDetail.Status = 'Quarter'\n\t\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Wager Currently Not Available';\n\t\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase JSON.stringify(event.BetDetail) !== JSON.stringify(event.PrevBetDetail):\n\t\t\t\t\t\tevent.WagerDetail.Status = 'HasUpdated'\n\t\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Wager Has Been Updated';\n\t\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\t\tlatestParlayOddsWagerList.push(event)\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t}\n\t})).then(async () => {\n\t\tconst allBetConfirmed = latestParlayOddsWagerList.every(event => event.WagerDetail.BetConfirm === true)\n\t\tif(allBetConfirmed){\n\t\t\tconst newParlayOpenBet = new OpenBet({\n\t\t\t\torderNumber: uniqid.process().toUpperCase(),\n\t\t\t\tsuperAgent: req.user.superAgent,\n\t\t\t\tbetOption: 'Parlay',\n\t\t\t\tagent: req.user.agent,\n\t\t\t\tuser: req.user.username,\n\t\t\t\tevents: [],\n\t\t\t\teventsWagerDetail: {\n\t\t\t\t\tErrMsg: '',\n\t\t\t\t\tRiskAmount: req.body.riskAmount,\n\t\t\t\t\tWinAmount: req.body.winAmount,\n\t\t\t\t\tResult: ''\n\t\t\t\t},\n\t\t\t\tcreatedAt: moment()\n\t\t\t});\n\t\t\tlatestParlayOddsWagerList.map(event => {\n\t\t\t\tevent.Status = 'Pending';\n\t\t\t\tdelete event.WagerDetail;\n\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\tnewParlayOpenBet.events.push(event)\n\t\t\t})\n\t\t\tawait newParlayOpenBet.save()\n\t\t\tconsole.log('saved parpaly open bet')\n\t\t\treturn res.status(200).send('saved a parlay open bet order')\n\t\t}else{\n\t\t\treturn res.status(202).json(latestParlayOddsWagerList);\n\t\t}\n\t}).catch(error => res.status(404).send('parlay wager order submit error, unable save to database'))\n\n})\n\nexport default router;\n\n\n\n\n\n\n\n\n\n\n\n"]}