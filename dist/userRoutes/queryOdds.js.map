{"version":3,"sources":["../../src/userRoutes/queryOdds.js"],"names":["defaults","headers","common","apiKey","router","Router","post","req","res","get","then","querys","body","source3","response","data","eventOddList","map","event","Odds","newEvent","Object","assign","OddDetail","odd","SiteID","query","sportIdx","Sport","oddType","OddType","leagueName","League","Name","region","DisplayRegion","LeagueName","push","HomeTeam","toLowerCase","replace","letter","toUpperCase","AwayTeam","WagerDetail","WagerAmount","BetConfirm","WinAmount","RiskAmount","ErrMsg","Status","MatchTimePST","MatchTime","subtract","LastUpdatedPST","LastUpdated","HomePitcher","undefined","AwayPitcher","json","catch","console","log","status","send"],"mappings":"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","file":"queryOdds.js","sourcesContent":["import moment from 'moment';\nimport config from '../config';\nimport express from 'express';\nimport axios from 'axios';\naxios.defaults.headers.common['JsonOdds-API-Key'] = config.apiKey;\nconst router = express.Router();\n\nrouter.post('/query-odds', function(req, res){\n\taxios.get('https://jsonodds.com/api/odds').then(response => {\n\t\tconst querys = req.body;\n\t\tconst source3 = response.data;\n\t\tconst eventOddList = [];\n\t\tsource3.map(event => { event.Odds.map(odd => {\n\t\t\t\tconst newEvent = Object.assign({}, event);\n\t\t\t\tnewEvent.OddDetail = odd;\n\t\t\t\tquerys.map(query => {\n\t\t\t\t\tswitch(true){\n\t\t\t\t\t\tcase newEvent.OddDetail.SiteID === 3 && query.sportIdx === 7 && newEvent.Sport === 7 && query.oddType === newEvent.OddDetail.OddType && query.leagueName === newEvent.League.Name && query.region === newEvent.DisplayRegion:\n\t\t\t\t\t\t\t\tnewEvent.LeagueName = newEvent.League.Name;\n\t\t\t\t\t\t\t\teventOddList.push(newEvent);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase newEvent.OddDetail.SiteID === 3 && query.sportIdx !== 7 && newEvent.Sport !== 7 && query.sportIdx === newEvent.Sport && query.oddType === newEvent.OddDetail.OddType:\n\t\t\t\t\t\t\t\teventOddList.push(newEvent);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\teventOddList.map(event => {\n\t\t\tevent.HomeTeam = event.HomeTeam.toLowerCase().replace(/\\b[a-z]/g, letter => letter.toUpperCase())\n\t\t\tevent.AwayTeam = event.AwayTeam.toLowerCase().replace(/\\b[a-z]/g, letter => letter.toUpperCase())\n\t\t\tevent.WagerDetail = {\n\t\t\t\tWagerAmount: 0, \n\t\t\t\tBetConfirm: false, \n\t\t\t\tWinAmount: 0, \n\t\t\t\tRiskAmount: 0,\n\t\t\t\tErrMsg: '',\n\t\t\t\tStatus: 'Pending'\n\t\t\t};\n\t\t\tevent.MatchTimePST = moment(event.MatchTime).subtract('7', 'hours')\n\t\t\tevent.OddDetail.LastUpdatedPST = moment(event.OddDetail.LastUpdated).subtract('7', 'hours')\n\t\t\tif(event.Sport === 0){\n\t\t\t\tif(event.HomePitcher === undefined){\n\t\t\t\t\tevent.HomePitcher = 'Action'\n\t\t\t\t}\n\t\t\t\tif(event.AwayPitcher === undefined){\n\t\t\t\t\tevent.AwayPitcher = 'Action'\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete event.MatchTime\n\t\t\tdelete event.OddDetail.LastUpdated\n\t\t\tdelete event.Odds\n\t\t\tdelete event.League\n\t\t\treturn event\n\t\t})\n\t\treturn res.json(eventOddList)\n\t}).catch(error => {\n        console.log('query odd list failed')\n        return res.status(404).send('query odd list failed')\n    })\n})\n\nexport default router;\n"]}