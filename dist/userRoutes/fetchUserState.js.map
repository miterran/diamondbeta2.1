{"version":3,"sources":["../../src/userRoutes/fetchUserState.js"],"names":["OpenBet","HistoryBet","router","Router","get","req","res","thisWeekBalance","openBetTotalRiskAmount","openBetTotalWinAmount","openBetStraight","openBetParlay","totalGamePending","find","user","username","completedAt","$gte","startOf","$lte","endOf","thisWeekHistoryBets","console","log","isEmpty","map","historyBet","Number","orderResultAmount","openBets","openBet","betOption","eventsWagerDetail","RiskAmount","WinAmount","findOne","err","result","userState","accountType","accountActive","thisWeekExtraCredit","weeklyStartBalance","maxWinAmount","maxWagerAmount","minRiskAmount","passcode","currentBalance","pendingCredit","maxParlayTeam","availableCredit","json","post","weekNum","body","datesData","subtract","add","format","historyBets","Total"],"mappings":"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","file":"fetchUserState.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport User from '../models/User';\nimport express from 'express';\nimport BetOrder from '../models/BetOrder'\nconst OpenBet = BetOrder.OpenBet\nconst HistoryBet = BetOrder.HistoryBet\nconst router = express.Router();\n\nrouter.get('/fetch-user-state', async (req, res) => {\n\n\tlet thisWeekBalance = 0\n\tlet openBetTotalRiskAmount = 0\n\tlet openBetTotalWinAmount = 0\n\n    let openBetStraight = 0\n    let openBetParlay = 0\n    let totalGamePending = 0\n\n\tconst thisWeekHistoryBets = await HistoryBet.find({user: req.user.username, completedAt: {$gte: moment().startOf('week'), $lte: moment().endOf('week')}})\n\tconsole.log('get user state history')\n\tif(!_.isEmpty(thisWeekHistoryBets)){\n\t\tthisWeekHistoryBets.map(function(historyBet){\n\t\t\tthisWeekBalance += Number(historyBet.orderResultAmount);\n\t\t})\n\t}\n\n\tconst openBets = await OpenBet.find({user: req.user.username})\n\tconsole.log('get user state openbet')\n\tif(!_.isEmpty(openBets)){\n\t   \topenBets.map(function(openBet){\n\t\t\tif(openBet.betOption === 'Straight'){\n\t\t\t\topenBetStraight++\n\t\t\t}\n\t\t\tif(openBet.betOption === 'Parlay'){\n\t\t\t\topenBetParlay++\n\t\t\t}\n\t\t\ttotalGamePending++\n\t   \t\topenBetTotalRiskAmount += Number(openBet.eventsWagerDetail.RiskAmount);\n\t   \t\topenBetTotalWinAmount += Number(openBet.eventsWagerDetail.WinAmount);\n\t   \t})\n\t}\n\n\tUser.findOne({username: req.user.username}, 'accountType username accountActive weeklyStartBalance maxWinAmount maxWagerAmount minRiskAmount passcode maxParlayTeam', function(err, result){\n\t\tconsole.log('send all')\n\t\tconst userState = {\n\t\t\taccountType: result.accountType,\n\t\t\tusername: result.username,\n\t\t\taccountActive: result.accountActive,\n\t\t\tthisWeekExtraCredit: result.thisWeekExtraCredit,\n\t\t\tweeklyStartBalance: result.weeklyStartBalance,\n\t\t\tmaxWinAmount: result.maxWinAmount,\n\t\t\tmaxWagerAmount: result.maxWagerAmount,\n\t\t\tminRiskAmount: result.minRiskAmount,\n\t\t\tpasscode: result.passcode,\n\t\t\tcurrentBalance: thisWeekBalance,\n\t\t\tpendingCredit: openBetTotalRiskAmount,\n\t\t\tmaxParlayTeam: result.maxParlayTeam,\n\t\t\tavailableCredit: Number(result.weeklyStartBalance) + Number(thisWeekBalance) - Number(openBetTotalRiskAmount),\n\t\t\topenBetStraight: openBetStraight,\n\t\t\topenBetParlay: openBetParlay,\n\t\t\ttotalGamePending: totalGamePending,\n\t\t\topenBetTotalRiskAmount: openBetTotalRiskAmount,\n\t\t\topenBetTotalWinAmount: openBetTotalWinAmount\n\t\t}\n\t\tres.json(userState)\n\t})\n})\n\n\nrouter.post('/fetch-weekly-summary', async (req, res) => {\n\tconst weekNum = req.body.weekNum\n\tlet datesData = {\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(0, 'day').format('MMM DD')]: 0,\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(1, 'day').format('MMM DD')]: 0,\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(2, 'day').format('MMM DD')]: 0,\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(3, 'day').format('MMM DD')]: 0,\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(4, 'day').format('MMM DD')]: 0,\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(5, 'day').format('MMM DD')]: 0,\n\t\t[moment().startOf('week').subtract(weekNum, 'day').add(6, 'day').format('MMM DD')]: 0,\n\t\tTotal: 0\n\t}\n\n\tconst historyBets = await HistoryBet.find({user: req.user.username, completedAt: {$gte: moment().startOf('week').subtract(weekNum, 'day').add(0, 'day').format(), $lte: moment().endOf('week').subtract(weekNum, 'day').add(0, 'day').format()}})\n\tif(!_.isEmpty(historyBets)){\n\t   \thistoryBets.map(function(historyBet){\n\t   \t\tdatesData[moment(historyBet.completedAt).format('MMM DD')] += historyBet.orderResultAmount\n\t   \t\tdatesData.Total += historyBet.orderResultAmount\n\t   \t})\n\t   \tres.json(datesData)\n\t}else{\n\t\tres.json(datesData)\n\t}\n})\n\n\n\n\nexport default router;"]}