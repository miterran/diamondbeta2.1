{"version":3,"sources":["../../src/userRoutes/straightWagerSubmit.js"],"names":["defaults","headers","common","apiKey","post","router","Router","OpenBet","req","res","latestStraightOddsWagerList","Promise","all","body","map","event","find","user","username","OddPickID","existStraightOrders","length","WagerDetail","Status","ErrMsg","orderNumber","RiskAmount","WinAmount","WagerAmount","BetConfirm","push","queryOdd","stringify","GameIDs","ID","Source","OddDetail","SiteID","Sport","sport","OddType","BetDetail","response","data","utc","isBefore","parseZone","MatchTime","Odds","PrevBetDetail","Object","assign","BetType","OddTarget","OddLine","MoneyLineHome","MoneyLineAway","OddPoint","PointSpreadHome","PointSpreadHomeLine","PointSpreadAway","PointSpreadAwayLine","TotalNumber","OverLine","UnderLine","DrawLine","JSON","then","allBetConfirmed","every","newStraightOpenBet","process","toUpperCase","superAgent","betOption","agent","events","eventsWagerDetail","save","console","log","status","send","catch","json"],"mappings":"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","file":"straightWagerSubmit.js","sourcesContent":["import config from '../config';\nimport sportConfig from '../utils/sportConfig';\nimport express from 'express';\nimport axios from 'axios';\nimport querystring from 'querystring';\naxios.defaults.headers.common['JsonOdds-API-Key'] = config.apiKey;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nconst router = express.Router();\nimport _ from 'lodash';\nimport BetOrder from '../models/BetOrder'\nconst OpenBet = BetOrder.OpenBet\nimport moment from 'moment';\nimport uniqid from 'uniqid';\n\nrouter.post('/straight-wager-submit', async (req, res) => {\n\n\tconst latestStraightOddsWagerList = [];\n\tawait Promise.all(req.body.map(async (event) => {\n\t\tconst existStraightOrders = await OpenBet.find({'user': req.user.username, 'betOption': 'Straight', 'events.OddPickID': event.OddPickID})\n\t\tif(existStraightOrders.length > 0){\n\t\t\tevent.WagerDetail.Status = 'Existed'\n\t\t\tevent.WagerDetail.ErrMsg = 'Order Number ' + existStraightOrders[0].orderNumber;\n\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t}else{\n\t\t\tconst queryOdd = querystring.stringify({GameIDs: event.ID, Source: event.OddDetail.SiteID, Sport: sportConfig[event.Sport].sport, OddType: event.BetDetail.OddType});\n\t\t\tconst response = await axios.post('https://jsonodds.com/api/odds/bygames', queryOdd)\n\t\t\tif(response.data.length > 0 || moment().utc('+07:00').isBefore(moment.parseZone(event.MatchTime+'+07:00').utc())){\n\t\t\t\tevent.OddDetail = response.data[0].Odds[0];\n\t\t\t\tevent.PrevBetDetail = Object.assign({}, event.BetDetail);\n\t\t\t\tswitch(true){\n\t\t\t\t\tcase event.BetDetail.BetType === 'M-Line' && event.BetDetail.OddTarget === 'Home':\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.MoneyLineHome;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'M-Line' && event.BetDetail.OddTarget === 'Away':\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.MoneyLineAway;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Spread' && event.BetDetail.OddTarget === 'Home':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.PointSpreadHome;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.PointSpreadHomeLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Spread' && event.BetDetail.OddTarget === 'Away':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.PointSpreadAway;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.PointSpreadAwayLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Total' && event.BetDetail.OddTarget === 'Over':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.TotalNumber;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.OverLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Total' && event.BetDetail.OddTarget === 'Under':\n\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.TotalNumber;\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.UnderLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.BetDetail.BetType === 'Draw' && event.Sport === 7:\n\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.DrawLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(JSON.stringify(event.BetDetail) !== JSON.stringify(event.PrevBetDetail)){\n\t\t\t\t\tevent.WagerDetail.Status = 'HasUpdated'\n\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Wager Has Been Updated';\n\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t}else{\n\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tevent.WagerDetail.Status = 'TimeOut'\n\t\t\t\tevent.WagerDetail.ErrMsg = 'Event Time Out';\n\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t}\n\t\t}\n\t})).then(async () => {\n\t\tconst allBetConfirmed = latestStraightOddsWagerList.every(event => event.WagerDetail.BetConfirm === true)\n\t\tif(allBetConfirmed){\n\t\t\tawait Promise.all(latestStraightOddsWagerList.map(async (event) => {\n\t\t\t\tconst newStraightOpenBet = new OpenBet({\n\t\t\t\t\torderNumber: uniqid.process().toUpperCase(),\n\t\t\t\t\tsuperAgent: req.user.superAgent,\n\t\t\t\t\tbetOption: 'Straight',\n\t\t\t\t\tagent: req.user.agent,\n\t\t\t\t\tuser: req.user.username,\n\t\t\t\t\tevents: [],\n\t\t\t\t\teventsWagerDetail: {\n\t\t\t\t\t\tErrMsg: '',\n\t\t\t\t\t\tRiskAmount: event.WagerDetail.RiskAmount,\n\t\t\t\t\t\tWinAmount: event.WagerDetail.WinAmount\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tevent.Status = 'Pending';\n\t\t\t\tdelete event.WagerDetail;\n\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\tnewStraightOpenBet.events.push(event)\n\t\t\t\tawait newStraightOpenBet.save()\n\t\t\t\tconsole.log('saved straight open bet')\n\t\t\t})).then(() => {\n\t\t\t\tconsole.log('done all straight open bet save')\n\t\t\t\treturn res.status(200).send('saved all open bet order')\n\t\t\t}).catch(error => res.status(404).send('straight wager order submit error, unable save to database'))\n\t\t}else{\n\t\t\treturn res.status(202).json(latestStraightOddsWagerList);\n\t\t}\n\t}).catch(error => res.status(404).send('enable to create latestStraightOddsWagerList'))\n\n\n})\nexport default router;\n\n\n\n\n\n"]}