{"version":3,"sources":["../../src/userRoutes/straightWagerSubmit.js"],"names":["defaults","headers","common","apiKey","post","router","Router","OpenBet","req","res","latestStraightOddsWagerList","Promise","all","body","map","event","find","user","username","OddPickID","existStraightOrders","isEmpty","WagerDetail","Status","ErrMsg","orderNumber","RiskAmount","WinAmount","WagerAmount","BetConfirm","push","queryOdd","stringify","GameIDs","ID","Source","OddDetail","SiteID","Sport","sport","OddType","BetDetail","response","data","isAfter","MatchTimePST","PrevBetDetail","Odds","LastUpdatedPST","lastUpdated","subtract","LastUpdated","Object","assign","BetType","OddTarget","OddLine","MoneyLineHome","MoneyLineAway","OddPoint","PointSpreadHome","PointSpreadHomeLine","PointSpreadAway","PointSpreadAwayLine","TotalNumber","OverLine","UnderLine","DrawLine","Number","JSON","then","allBetConfirmed","every","newStraightOpenBet","process","toUpperCase","superAgent","betOption","agent","events","eventsWagerDetail","createdAt","save","console","log","status","send","catch","json"],"mappings":"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","file":"straightWagerSubmit.js","sourcesContent":["import config from '../config';\nimport sportConfig from '../utils/sportConfig';\nimport express from 'express';\nimport axios from 'axios';\nimport querystring from 'querystring';\naxios.defaults.headers.common['JsonOdds-API-Key'] = config.apiKey;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nconst router = express.Router();\nimport _ from 'lodash';\nimport BetOrder from '../models/BetOrder'\nconst OpenBet = BetOrder.OpenBet\nimport moment from 'moment';\nimport uniqid from 'uniqid';\n\nrouter.post('/straight-wager-submit', async (req, res) => {\n\n\tconst latestStraightOddsWagerList = [];\n\tawait Promise.all(req.body.map(async (event) => {\n\t\tconst existStraightOrders = await OpenBet.find({'user': req.user.username, 'betOption': 'Straight', 'events.OddPickID': event.OddPickID})\n\t\tif(!_.isEmpty(existStraightOrders)){\n\t\t\tevent.WagerDetail.Status = 'Existed'\n\t\t\tevent.WagerDetail.ErrMsg = 'Order Number ' + existStraightOrders[0].orderNumber;\n\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t}else{\n\t\t\tconst queryOdd = querystring.stringify({GameIDs: event.ID, Source: event.OddDetail.SiteID, Sport: sportConfig[event.Sport].sport, OddType: event.BetDetail.OddType});\n\t\t\tconst response = await axios.post('https://jsonodds.com/api/odds/bygames', queryOdd)\n\t\t\tswitch(true){\n\t\t\t\tcase _.isEmpty(response.data):\n\t\t\t\t\tevent.WagerDetail.Status = 'NotFound'\n\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Event Not Found';\n\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t\tbreak;\n\t\t\t\tcase moment().isAfter(moment(event.MatchTimePST)):\n\t\t\t\t\tevent.WagerDetail.Status = 'TimeOut'\n\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Event Time Out';\n\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tevent.OddDetail = response.data[0].Odds[0];\n\t\t\t\t\tevent.OddDetail.LastUpdatedPST = moment(response.data[0].Odds[0].lastUpdated).subtract('7', 'hours')\n\t\t\t\t\tdelete event.OddDetail.LastUpdated\n\t\t\t\t\tevent.PrevBetDetail = Object.assign({}, event.BetDetail);\n\t\t\t\t\tswitch(true){\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'M-Line' && event.BetDetail.OddTarget === 'Home':\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.MoneyLineHome;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'M-Line' && event.BetDetail.OddTarget === 'Away':\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.MoneyLineAway;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'Spread' && event.BetDetail.OddTarget === 'Home':\n\t\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.PointSpreadHome;\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.PointSpreadHomeLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'Spread' && event.BetDetail.OddTarget === 'Away':\n\t\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.PointSpreadAway;\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.PointSpreadAwayLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'Total' && event.BetDetail.OddTarget === 'Over':\n\t\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.TotalNumber;\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.OverLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'Total' && event.BetDetail.OddTarget === 'Under':\n\t\t\t\t\t\t\t event.BetDetail.OddPoint = event.OddDetail.TotalNumber;\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.UnderLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase event.BetDetail.BetType === 'Draw' && event.Sport === 7:\n\t\t\t\t\t\t\t event.BetDetail.OddLine = event.OddDetail.DrawLine;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tswitch(true){\n\t\t\t\t\t\tcase Number(event.BetDetail.OddLine) === 0:\n\t\t\t\t\t\t\tevent.WagerDetail.Status = 'NotAvailable'\n\t\t\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Wager Currently Not Available';\n\t\t\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase JSON.stringify(event.BetDetail) !== JSON.stringify(event.PrevBetDetail):\n\t\t\t\t\t\t\tevent.WagerDetail.Status = 'HasUpdated'\n\t\t\t\t\t\t\tevent.WagerDetail.ErrMsg = 'Wager Has Been Updated';\n\t\t\t\t\t\t\tevent.WagerDetail.RiskAmount = 0;\n\t\t\t\t\t\t\tevent.WagerDetail.WinAmount = 0;\n\t\t\t\t\t\t\tevent.WagerDetail.WagerAmount = 0;\n\t\t\t\t\t\t\tevent.WagerDetail.BetConfirm = false;\n\t\t\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\t\t\t\tlatestStraightOddsWagerList.push(event)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t})).then(async () => {\n\t\tconst allBetConfirmed = latestStraightOddsWagerList.every(event => event.WagerDetail.BetConfirm === true)\n\t\tif(allBetConfirmed){\n\t\t\tawait Promise.all(latestStraightOddsWagerList.map(async (event) => {\n\t\t\t\tconst newStraightOpenBet = new OpenBet({\n\t\t\t\t\torderNumber: uniqid.process().toUpperCase(),\n\t\t\t\t\tsuperAgent: req.user.superAgent,\n\t\t\t\t\tbetOption: 'Straight',\n\t\t\t\t\tagent: req.user.agent,\n\t\t\t\t\tuser: req.user.username,\n\t\t\t\t\tevents: [],\n\t\t\t\t\teventsWagerDetail: {\n\t\t\t\t\t\tErrMsg: '',\n\t\t\t\t\t\tRiskAmount: event.WagerDetail.RiskAmount,\n\t\t\t\t\t\tWinAmount: event.WagerDetail.WinAmount\n\t\t\t\t\t},\n\t\t\t\t\tcreatedAt: moment()\n\t\t\t\t});\n\t\t\t\tevent.Status = 'Pending';\n\t\t\t\tdelete event.WagerDetail;\n\t\t\t\tdelete event.PrevBetDetail;\n\t\t\t\tnewStraightOpenBet.events.push(event)\n\t\t\t\tawait newStraightOpenBet.save()\n\t\t\t\tconsole.log('saved straight open bet')\n\t\t\t})).then(() => {\n\t\t\t\tconsole.log('done all straight open bet save')\n\t\t\t\treturn res.status(200).send('saved all open bet order')\n\t\t\t}).catch(error => res.status(404).send('straight wager order submit error, unable save to database'))\n\t\t}else{\n\t\t\treturn res.status(202).json(latestStraightOddsWagerList);\n\t\t}\n\t}).catch(error => res.status(404).send('enable to create latestStraightOddsWagerList'))\n\n\n})\nexport default router;\n\n\n\n\n\n"]}